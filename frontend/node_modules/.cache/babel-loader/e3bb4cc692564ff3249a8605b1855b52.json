{"ast":null,"code":"var _jsxFileName = \"E:\\\\education\\\\Phyton\\\\Projercts\\\\my_course_works\\\\course_3\\\\src\\\\pages\\\\list\\\\List.js\",\n    _s = $RefreshSig$();\n\nimport styles from \"./List.module.scss\";\nimport { useParams } from 'react-router-dom';\nimport { useEffect, useState } from \"react\";\nimport { getGenre } from \"../../api/genres\";\nimport { getDirector } from \"../../api/directors\";\nimport { getFavorites } from \"../../api/user\";\nimport Header from \"../../components/header/Header\";\nimport Loader from \"../../components/loader/Loader\";\nimport MovieCardSet from \"../../components/movieCardSet/MovieCardSet\";\nimport { getMovies } from \"../../api/movies\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const List = _ref => {\n  _s();\n\n  let {\n    title,\n    type\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  const [state, setState] = useState({\n    loading: true,\n    content: []\n  });\n  const [movies, setMovies] = useState({\n    loading: true,\n    content: []\n  });\n  useEffect(() => {\n    switch (type) {\n      case \"genre\":\n        (async () => {\n          const {\n            data\n          } = await getGenre(id);\n          setState({\n            loading: false,\n            content: data\n          });\n        })();\n\n        (async () => {\n          const {\n            data\n          } = await getMovies();\n          setMovies({\n            loading: false,\n            content: data.filter(movie => movie.genre.id === Number(id))\n          });\n        })();\n\n        break;\n\n      case \"director\":\n        (async () => {\n          const {\n            data\n          } = await getDirector(id);\n          setState({\n            loading: false,\n            content: data\n          });\n        })();\n\n        (async () => {\n          const {\n            data\n          } = await getMovies();\n          setMovies({\n            loading: false,\n            content: data.filter(movie => movie.director.id === Number(id))\n          });\n        })();\n\n        break;\n\n      case \"favorites\":\n        (async () => {\n          const {\n            data\n          } = await getFavorites();\n          setMovies({\n            loading: false,\n            content: data\n          });\n        })();\n\n        break;\n\n      default:\n        break;\n    }\n  }, [id, type]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.List,\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: `${title}${state.content.name ? \": \" + state.content.name : \"\"}`,\n      subtitle: \"Sky movies\",\n      type: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.List__cards,\n      children: [movies.loading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 28\n      }, this), movies.content.length > 0 && /*#__PURE__*/_jsxDEV(MovieCardSet, {\n        movies: movies.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(List, \"HpjIT2AjNAprhEr5D4lrovogqNo=\", false, function () {\n  return [useParams];\n});\n\n_c = List;\nexport default List;\n\nvar _c;\n\n$RefreshReg$(_c, \"List\");","map":{"version":3,"sources":["E:/education/Phyton/Projercts/my_course_works/course_3/src/pages/list/List.js"],"names":["styles","useParams","useEffect","useState","getGenre","getDirector","getFavorites","Header","Loader","MovieCardSet","getMovies","List","title","type","id","state","setState","loading","content","movies","setMovies","data","filter","movie","genre","Number","director","name","List__cards","length"],"mappings":"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","sourcesContent":["import styles from \"./List.module.scss\";\r\nimport { useParams } from 'react-router-dom'\r\nimport { useEffect, useState } from \"react\";\r\nimport { getGenre } from \"../../api/genres\";\r\nimport { getDirector } from \"../../api/directors\";\r\nimport { getFavorites } from \"../../api/user\";\r\nimport Header from \"../../components/header/Header\";\r\nimport Loader from \"../../components/loader/Loader\";\r\nimport MovieCardSet from \"../../components/movieCardSet/MovieCardSet\";\r\nimport {getMovies} from \"../../api/movies\";\r\n\r\nexport const List = ({ title, type }) => {\r\n  const { id } = useParams();\r\n  const [state, setState] = useState({loading: true, content: []});\r\n  const [movies, setMovies] = useState({loading: true, content: []});\r\n\r\n  useEffect(() => {\r\n    switch (type) {\r\n      case \"genre\":\r\n        (async () => {\r\n          const { data } = await getGenre(id);\r\n          setState({loading: false, content: data})\r\n        })();\r\n        (async () => {\r\n          const { data } = await getMovies();\r\n          setMovies({loading: false, content: data.filter(movie => movie.genre.id === Number(id))});\r\n        })();\r\n        break;\r\n\r\n      case \"director\":\r\n        (async () => {\r\n          const { data } = await getDirector(id);\r\n          setState({loading: false, content: data});\r\n        })();\r\n        (async () => {\r\n          const { data } = await getMovies();\r\n          setMovies({loading: false, content: data.filter(movie => movie.director.id === Number(id))});\r\n        })();\r\n        break;\r\n\r\n      case \"favorites\":\r\n        (async () => {\r\n          const { data } = await getFavorites();\r\n          setMovies({loading: false, content: data});\r\n        })();\r\n        break;\r\n\r\n      default:\r\n        break;\r\n\r\n    }\r\n  }, [id, type]);\r\n\r\n  return (\r\n    <div className={styles.List}>\r\n      <Header\r\n        title={`${title}${state.content.name ? \": \" + state.content.name : \"\"}`}\r\n        subtitle=\"Sky movies\"\r\n        type=\"secondary\"\r\n      />\r\n\r\n      <div className={styles.List__cards}>\r\n        {movies.loading && <Loader />}\r\n        {movies.content.length > 0 &&\r\n          <MovieCardSet movies={movies.content} />\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default List;"]},"metadata":{},"sourceType":"module"}